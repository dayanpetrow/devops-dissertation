{"version":3,"sources":["pages/Survey/types.ts","pages/Survey/Stepper/stepperSlice.ts","pages/Survey/surveySlice.ts","pages/Survey/submitSurveySlice.ts","store/rootReducer.ts","store/configureStore.ts","pages/Survey/styled.ts","pages/Survey/Stepper/styled.ts","pages/Survey/Stepper/Stepper.tsx","components/TopBar/styled.ts","components/TopBar/TopBar.tsx","components/SubSectionTitle/SubSectionTitle.tsx","components/MultipleSelect/MultipleSelect.tsx","components/Submit/Submit.tsx","components/Main/Main.tsx","components/StepTitle/StepTitle.tsx","components/Scale/Scale.tsx","pages/Survey/Steps/useStepUtils.ts","pages/Survey/Steps/Professional.tsx","pages/Survey/Steps/Perception.tsx","pages/Survey/Steps/Maturity.tsx","pages/Survey/Steps/Culture.tsx","pages/Survey/Steps/Benefits.tsx","pages/Survey/Steps/Challenges.tsx","pages/Survey/Survey.tsx","pages/Home/styled.ts","logo.png","pages/Home/Home.tsx","pages/Completed/styled.ts","pages/Completed/CompletedPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Steps","stepperSlice","createSlice","name","initialState","currentStep","reducers","nextStep","state","prevStep","goStep","action","payload","actions","stepperReducer","reducer","consentFormAccepted","PROFESSIONAL","PERCEPTION","MATURITY","CULTURE","BENEFITS","CHALLENGES","surveySlice","acceptAgreement","resetAgreement","setStepData","key","stepData","resetStepData","resetSurvey","surveyReducer","loading","error","success","saveSurveySlice","saveSurveyInit","saveSurveySuccess","saveSurveyFailure","resetSaveSurveyState","saveSurveyReducer","applicationReducer","combineReducers","stepper","survey","save","middleware","getDefaultMiddleware","immutableCheck","store","configureStore","devTools","process","Wrapper","styled","div","SurveyWrapper","main","Main","aside","MobileStepper","Stepper","dispatch","useDispatch","useSelector","onChange","step","steps","length","style","width","maxWidth","size","value","toString","val","map","index","Option","title","current","direction","Step","description","emailAddress","TopBar","className","type","onClick","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","message","href","target","SubSectionTitle","MultipleSelect","options","selectedOptions","disableAdd","limit","disabled","useState","ownOptions","setOwnOptions","newOptionName","setNewOptionName","hasLimitError","setHasLimitError","onNameChange","event","addItem","filteredOptions","filter","o","includes","mode","placeholder","selectedItems","onBlur","dropdownRender","undefined","menu","margin","display","flexWrap","padding","flex","cursor","PlusOutlined","item","Submit","props","children","renderTitle","PERSONAL","TOOLS","StepTitle","Scale","_onChange","e","_opt","Group","label","ScaleLabels","useStepUtils","stepName","stepState","formData","setFormData","submitData","useRef","saveStepData","useEffect","Professional","onChangeByName","onSubmit","layout","gutter","xs","lg","Item","position","text","_option","experience","xl","companyNationality","companySize","companyOrientation","Perception","span","TextArea","autoSize","minRows","maxRows","devOpsDefinition","agileRelation","Maturity","leadTime","deploymentFrequency","timeToRestore","tooltip","changeFailPercentage","toolchainResponsibility","toolchainIncludes","onDemandDeployment","businessHoursDeployments","commitAutomation","failingTests","activelyAutomates","productionIncidents","monitoringIssues","monitorMetrics","securityReviews","documentation","deployableState","Culture","multidiscplinaryTeams","collaboration","communication","initiative","technologyStack","sharedResponsibility","failures","differentPerspective","outsideCommunication","teamConnection","Benefits","organizationalBenefits","nextSelected","projectBenefits","otherBenefits","Challenges","isReady","setIsReady","submitState","organizationalChallenges","teamChallenges","otherChallenges","checked","getState","a","surveyData","axios","post","submittedAt","Date","now","renderStep","Survey","window","scrollTo","top","left","behavior","Helmet","Panel","Collapse","consentParagrahs","Home","isChecked","setIsChecked","src","shefLogo","alt","defaultActiveKey","accordion","header","para","block","fadeIn","keyframes","CompletedPage","status","subTitle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mKAAYA,E,0CCQNC,EAAeC,YAAY,CAC/BC,KAAM,UACNC,aAJiC,CAAEC,YAAa,GAKhDC,SAAU,CACRC,SADQ,SACCC,GACPA,EAAMH,eAERI,SAJQ,SAICD,GACPA,EAAMH,eAERK,OAPQ,SAODF,EAAOG,GACZH,EAAMH,YAAcM,EAAOC,YAK1B,EAAuCX,EAAaY,QAA5CN,EAAR,EAAQA,SAAoBG,GAA5B,EAAkBD,SAAlB,EAA4BC,QACXI,EAAmBb,EAA5Bc,Q,kBDzBHf,K,oBAAAA,E,4BAAAA,E,wBAAAA,E,oBAAAA,E,kBAAAA,E,cAAAA,E,oBAAAA,E,yBAAAA,M,KEKZ,I,4BAAMI,GAAuB,GAC3BY,qBAAqB,GADM,cAE1BhB,EAAMiB,aAAe,IAFK,cAG1BjB,EAAMkB,WAAa,IAHO,cAI1BlB,EAAMmB,SAAW,IAJS,cAK1BnB,EAAMoB,QAAU,IALU,cAM1BpB,EAAMqB,SAAW,IANS,cAO1BrB,EAAMsB,WAAa,IAPO,GAUvBC,EAAcrB,YAAY,CAC9BC,KAAM,SACNC,eACAE,SAAU,CACRkB,gBADQ,SACQhB,GACdA,EAAMQ,qBAAsB,GAE9BS,eAJQ,SAIOjB,GACbA,EAAMQ,qBAAsB,GAG9BU,YARQ,SAQIlB,EAAOG,GACjB,MAA0BA,EAAOC,QAAzBe,EAAR,EAAQA,IAAKC,EAAb,EAAaA,SACbpB,EAAMmB,GAAOC,GAEfC,cAZQ,SAYMrB,EAAOG,GACnBH,EAAMG,EAAOC,SAAW,IAG1BkB,YAhBQ,WAiBN,OAAO1B,MAKN,EAMHmB,EAAYV,QALda,EADK,EACLA,YAEAF,GAHK,EAELK,cAFK,EAGLL,iBAIsBO,GAPjB,EAILN,eAJK,EAKLK,YAEwCP,EAA3BR,S,8DCpCTX,EAAgC,CACpC4B,SAAS,EACTC,MAAO,KACPC,SAAS,GAGLC,EAAkBjC,YAAY,CAClCC,KAAM,cACNC,aAAcA,EACdE,SAAU,CACR8B,eADQ,SACO5B,GACbA,EAAMyB,MAAQ,KACdzB,EAAMwB,SAAU,EAChBxB,EAAM0B,SAAU,GAElBG,kBANQ,SAMU7B,GAChBA,EAAMwB,SAAU,EAChBxB,EAAM0B,SAAU,GAElBI,kBAVQ,SAUU9B,EAAOG,GACvBH,EAAMwB,SAAU,EAChBxB,EAAMyB,MAAQtB,EAAOC,SAGvB2B,qBAfQ,WAgBN,OAAOnC,MAKb,EACE+B,EAAgBtB,QADVuB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAAmBC,EAA3C,EAA2CA,kBAGnBE,GADgBL,EAAgBtB,QAAzC0B,qBAC+BJ,EAA/BpB,SCvCF0B,EAAqBC,YAAgB,CAChDC,QAAS7B,EACT8B,OAAQb,EACRc,KAAML,ICLFM,EAAU,YAAOC,YAAqB,CAAEC,gBAAgB,KAEjDC,EAAQC,YAAe,CAClCnC,QAAS0B,EACTK,aACAK,UAAUC,I,6CCNCC,GAAUC,KAAOC,IAAV,8MASPC,GAAgBF,KAAOG,KAAV,qGAMbC,GAAOJ,KAAOC,IAAV,mU,oBCfJF,GAAUC,KAAOK,MAAV,4TAePC,GAAgBN,KAAOC,IAAV,mV,QCTbM,GAAU,WACrB,IAAMC,EAAWC,eACX1D,EAAc2D,cAClB,SAACxD,GAAD,OAAqBA,EAAMmC,QAAQtC,eAG/B4D,EAAW,SAACC,GAChBJ,EAASpD,EAAOwD,KAGlB,OACE,uCACE,gBAACN,GAAD,WACE,+CAAevD,EAAc,EAA7B,YAAkC8D,GAAMC,UACxC,eAAC,KAAD,CACEC,MAAO,CAAEC,MAAO,MAAOC,SAAU,SACjCC,KAAM,QACNC,MAAOpE,EAAYqE,WACnBT,SAAU,SAACU,GAAD,OAAiBV,GAAUU,IAJvC,SAMGR,GAAMS,KAAI,SAACV,EAAMW,GAAP,OACT,eAAC,KAAOC,OAAR,CAA2BL,MAAOI,EAAMH,WAAxC,SAAqDR,EAAKa,OAAtCF,WAI1B,eAAC,GAAD,UACE,eAAC,KAAD,CAAOG,QAAS3E,EAAa4D,SAAUA,EAAUgB,UAAU,WAA3D,SACGd,GAAMS,KAAI,SAACV,EAAMW,GAAP,OACT,eAAC,KAAMK,KAAP,CAAwBH,MAAOb,EAAKa,MAAOI,YAAajB,EAAKiB,aAA5CN,cAavBV,GAAgB,CACpB,CACEY,MAAO,0BACPI,YAAa,IAEf,CACEJ,MAAO,oBACPI,YAAa,IAEf,CACEJ,MAAO,kBACPI,YAAa,IAEf,CACEJ,MAAO,iBACPI,YAAa,IAEf,CACEJ,MAAO,kBACPI,YAAa,IAEf,CACEJ,MAAO,oBACPI,YAAa,K,UCtEJ9B,GAAUC,KAAOC,IAAV,0vB,UCId6B,GAAe,2BAGRC,GAAS,WAYpB,OACE,eAAC,GAAD,UACE,uBAAKC,UAAW,SAAhB,UACE,gBAAC,KAAD,CACEC,KAAK,OACLC,QAhBO,WACb,IAAMC,EAAYC,SAASC,cAAc,YACzCF,EAAUG,UAAYR,GACtBM,SAASG,KAAKC,YAAYL,GAC1BA,EAAUM,SACVL,SAASM,YAAY,QACrBP,EAAUQ,SAEVC,IAAQhE,QAAR,4CASMsC,KAAM,QACNc,UAAW,iBAJb,UAME,eAAC,KAAD,CAAUd,KAAM,KACfY,MAEH,gBAAC,KAAD,CACEG,KAAK,OACLf,KAAM,QACNc,UAAW,iBACXa,KA9BO,2CA+BPC,OAAQ,SALV,UAOE,eAAC,KAAD,CAAgB5B,KAAM,KAPxB,wB,uCC1BFnB,GAAUC,KAAOC,IAAV,uVAkBA8C,GAAmC,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MACjD,OACE,eAAC,GAAD,UACE,8BAAKA,O,8BCfEuB,GAAkC,SAAC,GAOzC,IAAD,IANJC,eAMI,MANM,GAMN,MALJC,uBAKI,MALc,GAKd,EAJJvC,EAII,EAJJA,SAII,IAHJwC,kBAGI,SADJC,GACI,EAFJC,SAEI,EADJD,OAEA,EAAoCE,mBAAS,IAA7C,oBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,oBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,oBAAS,GAAnD,oBAAOK,EAAP,KAAsBC,EAAtB,KAEMC,EAAe,SAACC,GACpBJ,EAAiBI,EAAMhB,OAAO3B,QAG1B4C,EAAU,WACdP,EAAc,GAAD,mBAAKD,GAAL,CAAiBE,KAC9BC,EAAiB,KAiBbM,EAAkB,sBAAIf,GAAJ,YAAgBM,IAAYU,QAClD,SAACC,GAAD,OAAQhB,EAAgBiB,SAASD,MAGnC,OACE,eAAC,KAAD,CACEhD,KAAM,QACNkD,KAAM,WACNC,YAAY,qBACZlD,MAAO+B,EACPvC,SAxBiB,SAAC2D,GAGpB,GAFAV,GAAiB,GAEbR,GAASA,EAAQkB,EAAcxD,OAGjC,OAFA8C,GAAiB,QACjBhB,IAAQjE,MAAR,sCAA6CyE,EAA7C,cAIFzC,EAAS2D,IAgBPvD,MAAO,CAAEC,MAAO,QAChBgB,UAAW2B,EAAgB,cAAgB,GAC3CY,OAfW,kBAAMX,GAAiB,IAgBlCY,eACErB,OACIsB,EACA,SAACC,GAAD,OACE,iCACGA,EACD,eAAC,KAAD,CAAS3D,MAAO,CAAE4D,OAAQ,WAC1B,uBACE5D,MAAO,CAAE6D,QAAS,OAAQC,SAAU,SAAUC,QAAS,GADzD,UAGE,eAAC,KAAD,CACE/D,MAAO,CAAEgE,KAAM,QACf5D,MAAOsC,EACP9C,SAAUkD,IAEZ,qBACE9C,MAAO,CACLgE,KAAM,OACND,QAAS,MACTF,QAAS,QACTI,OAAQ,WAEV9C,QAAS6B,EACTlB,KAAM,IARR,UAUE,eAACoC,GAAA,EAAD,IAVF,iBAxBd,SAyCGjB,EAAgB1C,KAAI,SAAC4D,GAAD,OACnB,eAAC,KAAO1D,OAAR,CAA0BL,MAAO+D,EAAjC,SACGA,GADiBA,SC5FtBnF,ICDcC,KAAOG,KAAV,mEDCDH,KAAOC,IAAV,kXAoBAkF,GAAwB,SAACC,GACpC,OAAO,eAAC,GAAD,UAAUA,EAAMC,Y,6BEJnBC,GAAc,SAAC1E,GACnB,OAAQA,GACN,KAAKlE,EAAM6I,SACT,OACE,uCACE,eAAC,KAAD,IADF,2BAIJ,KAAK7I,EAAMiB,aACT,OACE,uCACE,eAAC,KAAD,IADF,8BAIJ,KAAKjB,EAAMmB,SACT,OACE,uCACE,eAAC,KAAD,IADF,sBAIJ,KAAKnB,EAAMkB,WACT,OACE,uCACE,eAAC,KAAD,IADF,wBAIJ,KAAKlB,EAAMoB,QACT,OACE,uCACE,eAAC,KAAD,IADF,qBAIJ,KAAKpB,EAAM8I,MACT,OACE,uCACE,eAAC,KAAD,IADF,mBAIJ,KAAK9I,EAAMqB,SACT,OACE,uCACE,eAAC,KAAD,IADF,sBAIJ,KAAKrB,EAAMsB,WACT,OACE,uCACE,eAAC,KAAD,IADF,wBAKJ,QACE,OAAO,iCAIP+B,GAAUC,KAAOC,IAAV,wWAoBAwF,GAA6B,SAAC,GAAc,IAAZ7E,EAAW,EAAXA,KAC3C,OAAO,eAAC,GAAD,CAASoB,UAAW,aAApB,SAAmCsD,GAAY1E,M,UCvFlDb,GAAUC,KAAOC,IAAV,k5CA4EAyF,GAAyB,SAACN,GACrC,IAAQ3D,EAA2B2D,EAA3B3D,MAAON,EAAoBiE,EAApBjE,MAAOR,EAAayE,EAAbzE,SAEhBgF,EAAY,SAACC,GACjBjF,EAASiF,EAAE9C,OAAO3B,QAGpB,OACE,gBAAC,GAAD,WACE,sBAAKa,UAAW,QAAhB,SAA0BP,IAC1B,sBAAKO,UAAW,UAAhB,SACGiB,GAAQ3B,KAAI,SAACuE,EAAWtE,GAAZ,OACX,sBAAKS,UAAW,SAAUE,QAAS,kBAAMvB,EAASkF,EAAK1E,QAAvD,SACE,eAAC,KAAM2E,MAAP,CACEnF,SAAUgF,EACVxE,MAAOA,EACPD,KAAM,QACNH,MAAO,CAAEC,MAAO,QAJlB,SAME,eAAC,KAAD,CAAOG,MAAO0E,EAAK1E,MAAnB,SACE,uBAAMa,UAAW,QAAjB,SAA2BiB,GAAQ1B,GAAOwE,aARoBF,EAAK1E,gBAkBtE6E,GAAc,WACzB,OACE,gBAAC,GAAD,CAAShE,UAAW,WAApB,UACE,sBAAKA,UAAW,UAChB,sBAAKA,UAAW,UAAhB,SACGiB,GAAQ3B,KAAI,SAACuE,GAAD,OACX,sBAAqB7D,UAAW,SAAhC,SAA2C6D,EAAKE,OAAtCF,EAAK1E,gBAOnB8B,GAAU,CACd,CAAE9B,MAAO,IAAK4E,MAAO,qBACrB,CAAE5E,MAAO,IAAK4E,MAAO,YACrB,CAAE5E,MAAO,IAAK4E,MAAO,kBACrB,CAAE5E,MAAO,IAAK4E,MAAO,SACrB,CAAE5E,MAAO,IAAK4E,MAAO,mBChIVE,GAAe,SAACC,GAC3B,IAAM1F,EAAWC,eACX0F,EAAYzF,cAAY,SAACxD,GAAD,OAAqBA,EAAMoC,OAAO4G,MAEhE,EAAgC5C,mBAAS,IAAzC,oBAAO8C,EAAP,KAAiBC,EAAjB,KACMC,EAAaC,iBAAOH,GAiBpBI,EAAe,WACnB,IAAMlJ,EAAU,CACde,IAAK6H,EACL5H,SAAUgI,EAAW5E,SAGvBlB,EAASpC,EAAYd,KAoBvB,OAbAmJ,qBAAU,WAGR,OAFAJ,EAAYF,GAEL,WACLK,OAED,IAGHC,qBAAU,WACRH,EAAW5E,QAAU0E,IACpB,CAACA,IAEG,CAACA,EAzCS,SAACtC,GAChB,MAAwBA,EAAMhB,OAAtBjG,EAAR,EAAQA,KAAMsE,EAAd,EAAcA,MACdkF,EAAY,2BACPD,GADM,kBAERvJ,EAAOsE,MAIW,SAACtE,EAAcsE,GACpCkF,EAAY,2BACPD,GADM,kBAERvJ,EAAOsE,MAaK,WACfX,EAASvD,MAgB2CuJ,IC/C3CE,GAA8B,WACzC,MAAuDT,GACrDvJ,EAAMiB,cADR,oBAAOyI,EAAP,KAA2BO,GAA3B,WAA2CC,EAA3C,KAIA,OACE,uCACE,eAAC,GAAD,CAAWhG,KAAMlE,EAAMiB,eACvB,gBAAC,KAAD,CAAMkJ,OAAO,WAAW7E,UAAW,eAAnC,UACE,eAAC,GAAD,CAAiBP,MAAO,kBACxB,gBAAC,KAAD,CAAKqF,OAAQ,CAAC,GAAI,IAAlB,UACE,eAAC,KAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACE,eAAC,KAAKC,KAAN,CAAWlB,MAAM,WAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OAAWwF,EAAe,WAAYxF,IAChDA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUc,SACjBhG,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,wBACpB,CAAEhG,MAAO,IAAKgG,KAAM,gBACpB,CAAEhG,MAAO,IAAKgG,KAAM,yBACpB,CAAEhG,MAAO,IAAKgG,KAAM,UACpB,CAAEhG,MAAO,IAAKgG,KAAM,WACpB,CAAEhG,MAAO,IAAKgG,KAAM,UACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIC,GAAI,EAAjB,SACE,eAAC,KAAKC,KAAN,CAAWlB,MAAM,sBAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OAAWwF,EAAe,aAAcxF,IAClDA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUiB,WACjBnG,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,OACpB,CAAEhG,MAAO,IAAKgG,KAAM,OACpB,CAAEhG,MAAO,IAAKgG,KAAM,QACpB,CAAEhG,MAAO,IAAKgG,KAAM,SACpB,CAAEhG,MAAO,IAAKgG,KAAM,iBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,mBAStC,eAAC,GAAD,CAAiBM,MAAO,iBACxB,gBAAC,KAAD,CAAKqF,OAAQ,CAAC,GAAI,IAAlB,UACE,eAAC,KAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIM,GAAI,EAAzB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,sBAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OACRwF,EAAe,qBAAsBxF,IAEvCA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUmB,mBACjBrG,KAAM,QANR,SAQG,CACC,CAAEC,MAAO,IAAKgG,KAAM,sCACpB,CACEhG,MAAO,IACPgG,KAAM,0CAER,CAAEhG,MAAO,IAAKgG,KAAM,kBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIC,GAAI,GAAIM,GAAI,EAAzB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,eAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OAAWwF,EAAe,cAAexF,IACnDA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUoB,YACjBtG,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,QACpB,CAAEhG,MAAO,IAAKgG,KAAM,SACpB,CAAEhG,MAAO,IAAKgG,KAAM,WACpB,CAAEhG,MAAO,IAAKgG,KAAM,WACpB,CAAEhG,MAAO,IAAKgG,KAAM,YACpB,CAAEhG,MAAO,IAAKgG,KAAM,mBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIC,GAAI,GAAIM,GAAI,EAAzB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,sBAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OACRwF,EAAe,qBAAsBxF,IAEvCA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUqB,mBACjBvG,KAAM,QANR,SAQG,CACC,CAAEC,MAAO,IAAKgG,KAAM,WACpB,CAAEhG,MAAO,IAAKgG,KAAM,WACpB,CAAEhG,MAAO,IAAKgG,KAAM,UACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,mBAStC,eAAC,GAAD,UACE,eAAC,KAAD,CAAQc,KAAK,UAAUC,QAAS0E,EAAU1F,KAAM,QAAhD,2BCvHGwG,GAA4B,WACvC,MAAuDzB,GACrDvJ,EAAMkB,YADR,oBAAOwI,EAAP,KAAiBzF,EAAjB,KAA2BgG,EAA3B,KAA2CC,EAA3C,KAIA,OACE,uCACE,eAAC,GAAD,CAAWhG,KAAMlE,EAAMkB,aACvB,gBAAC,KAAD,CAAMiJ,OAAO,WAAW7E,UAAW,eAAnC,UACE,eAAC,KAAD,CAAK8E,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,qCAAjB,SACE,eAAC,KAAM6B,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCpH,SAAUA,EACV9D,KAAM,mBACNsE,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAU4B,iBACjB3D,YAAY,mBACZnD,KAAK,gBAMb,eAAC,KAAD,CAAK4F,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKC,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,sDAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACblD,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAU6B,cACjBtH,SAAU,SAACQ,GAAD,OAAWwF,EAAe,gBAAiBxF,IACrDD,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,qCACpB,CAAEhG,MAAO,IAAKgG,KAAM,gCACpB,CAAEhG,MAAO,IAAKgG,KAAM,wBACpB,CAAEhG,MAAO,IAAKgG,KAAM,iBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,kBAStC,eAAC,GAAD,UACE,eAAC,KAAD,CAAQc,KAAK,UAAUC,QAAS0E,EAAU1F,KAAM,QAAhD,2BCxDGgH,GAA0B,WACrC,MAAuDjC,GACrDvJ,EAAMmB,UADR,oBAAOuI,EAAP,KAA2BO,GAA3B,WAA2CC,EAA3C,KAIA,OACE,uCACE,eAAC,GAAD,CAAWhG,KAAMlE,EAAMmB,WACvB,gBAAC,KAAD,CAAMgJ,OAAO,WAAW7E,UAAW,eAAnC,UACE,gBAAC,KAAD,CAAK8E,OAAQ,CAAC,GAAI,IAAlB,UACE,eAAC,KAAD,CAAKC,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,8FAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OAAWwF,EAAe,WAAYxF,IAChDA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAU+B,SACjBjH,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,uBACpB,CAAEhG,MAAO,IAAKgG,KAAM,yBACpB,CAAEhG,MAAO,IAAKgG,KAAM,uBACpB,CAAEhG,MAAO,IAAKgG,KAAM,qBACpB,CAAEhG,MAAO,IAAKgG,KAAM,uBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,sDAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OACRwF,EAAe,sBAAuBxF,IAExCA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUgC,oBACjBlH,KAAM,QANR,SAQG,CACC,CAAEC,MAAO,IAAKgG,KAAM,yCACpB,CAAEhG,MAAO,IAAKgG,KAAM,gBACpB,CAAEhG,MAAO,IAAKgG,KAAM,6BACpB,CACEhG,MAAO,IACPgG,KAAM,4CAER,CAAEhG,MAAO,IAAKgG,KAAM,8BACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,mBAStC,gBAAC,KAAD,CAAK2F,OAAQ,CAAC,GAAI,IAAlB,UACE,eAAC,KAAD,CAAKC,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,yFAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OAAWwF,EAAe,gBAAiBxF,IACrDA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUiC,cACjBnH,KAAM,QAJR,SAMG,CACC,CAAEC,MAAO,IAAKgG,KAAM,qBACpB,CAAEhG,MAAO,IAAKgG,KAAM,yBACpB,CAAEhG,MAAO,IAAKgG,KAAM,uBACpB,CAAEhG,MAAO,IAAKgG,KAAM,qBACpB,CAAEhG,MAAO,IAAKgG,KAAM,uBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CACElB,MAAM,oEACNuC,QACE,yIAHJ,SAME,eAAC,KAAD,CACEjE,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OACRwF,EAAe,uBAAwBxF,IAEzCA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUmC,qBACjBrH,KAAM,QANR,SAQG,CACC,CAAEC,MAAO,KAAMgG,KAAM,cACrB,CAAEhG,MAAO,IAAKgG,KAAM,eACpB,CAAEhG,MAAO,IAAKgG,KAAM,eACpB,CAAEhG,MAAO,IAAKgG,KAAM,eACpB,CAAEhG,MAAO,IAAKgG,KAAM,eACpB,CAAEhG,MAAO,IAAKgG,KAAM,iBACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,mBAStC,gBAAC,KAAD,CAAK2F,OAAQ,CAAC,GAAI,IAAlB,UACE,eAAC,KAAD,CAAKC,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,uFAAjB,SACE,eAAC,KAAD,CACE1B,YAAa,gBACb1D,SAAU,SAACQ,GAAD,OACRwF,EAAe,0BAA2BxF,IAE5CA,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUoC,wBACjBtH,KAAM,QANR,SAQG,CACC,CACEC,MAAO,IACPgG,KAAM,uEAER,CACEhG,MAAO,IACPgG,KAAM,uEAER,CACEhG,MAAO,IACPgG,KAAM,+FAER,CAAEhG,MAAO,IAAKgG,KAAM,UACpB7F,KAAI,SAAC8F,GAAD,OACJ,eAAC,KAAO5F,OAAR,CAAmCL,MAAOiG,EAAQjG,MAAlD,SACGiG,EAAQD,MADSC,EAAQjG,gBAOpC,eAAC,KAAD,CAAK4F,GAAI,GAAIO,GAAI,GAAjB,SACE,eAAC,KAAKL,KAAN,CAAWlB,MAAM,iDAAjB,SACE,eAAC,GAAD,CACE7C,gBAAiBkD,EAASqC,kBAC1B9H,SAAU,SAACQ,GAAD,OAAWwF,EAAe,oBAAqBxF,IACzD8B,QAAS,CACP,uBACA,kBACA,+CACA,qCACA,gCACA,6BACA,+BACA,oCACA,2CAOV,eAAC,GAAD,IAEA,eAAC,GAAD,CACExB,MACE,oFAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,qBAAsBxF,IAC/DA,MAAOiF,EAASsC,qBAGlB,eAAC,GAAD,CACEjH,MACE,mGAEFd,SAAU,SAACQ,GAAD,OACRwF,EAAe,2BAA4BxF,IAE7CA,MAAOiF,EAASuC,2BAGlB,eAAC,GAAD,CACElH,MACE,yFAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,mBAAoBxF,IAC7DA,MAAOiF,EAASwC,mBAGlB,eAAC,GAAD,CACEnH,MACE,uEAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,eAAgBxF,IACzDA,MAAOiF,EAASyC,eAGlB,eAAC,GAAD,CACEpH,MACE,mEAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,oBAAqBxF,IAC9DA,MAAOiF,EAAS0C,oBAGlB,eAAC,GAAD,CACErH,MACE,qEAEFd,SAAU,SAACQ,GAAD,OACRwF,EAAe,sBAAuBxF,IAExCA,MAAOiF,EAAS2C,sBAGlB,eAAC,GAAD,CACEtH,MACE,6GAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,mBAAoBxF,IAC7DA,MAAOiF,EAAS4C,mBAGlB,eAAC,GAAD,CACEvH,MACE,2EAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,iBAAkBxF,IAC3DA,MAAOiF,EAAS6C,iBAGlB,eAAC,GAAD,CACExH,MACE,0EAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,kBAAmBxF,IAC5DA,MAAOiF,EAAS8C,kBAGlB,eAAC,GAAD,CACEzH,MACE,0HAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,gBAAiBxF,IAC1DA,MAAOiF,EAAS+C,gBAGlB,eAAC,GAAD,CACE1H,MACE,gGAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,kBAAmBxF,IAC5DA,MAAOiF,EAASgD,kBAGlB,eAAC,GAAD,UACE,eAAC,KAAD,CAAQnH,KAAK,UAAUC,QAAS0E,EAAU1F,KAAM,QAAhD,2BCxQGmI,GAAyB,WACpC,MAAuDpD,GACrDvJ,EAAMoB,SADR,oBAAOsI,EAAP,KAA2BO,GAA3B,WAA2CC,EAA3C,KAGA,OACE,uCACE,eAAC,GAAD,CAAWhG,KAAMlE,EAAMoB,UACvB,eAAC,GAAD,IAEA,gBAAC,KAAD,CAAM+I,OAAO,WAAW7E,UAAW,eAAnC,UACE,eAAC,GAAD,CAAiBP,MAAO,0BACxB,eAAC,GAAD,CACEA,MACE,yHAEFd,SAAU,SAACQ,GAAD,OACRwF,EAAe,wBAAyBxF,IAE1CA,MAAOiF,EAASkD,wBAElB,eAAC,GAAD,CACE7H,MAAO,+CACPd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,gBAAiBxF,IAC1DA,MAAOiF,EAASmD,gBAElB,eAAC,GAAD,CACE9H,MAAO,yDACPd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,gBAAiBxF,IAC1DA,MAAOiF,EAASoD,gBAElB,eAAC,GAAD,CACE/H,MAAO,oCACPd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,aAAcxF,IACvDA,MAAOiF,EAASqD,aAGlB,eAAC,GAAD,CACEhI,MACE,4HAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,kBAAmBxF,IAC5DA,MAAOiF,EAASsD,kBAGlB,eAAC,GAAD,CAAiBjI,MAAO,kBACxB,eAAC,GAAD,CACEA,MAAO,4DACPd,SAAU,SAACQ,GAAD,OACRwF,EAAe,uBAAwBxF,IAEzCA,MAAOiF,EAASuD,uBAGlB,eAAC,GAAD,CACElI,MACE,2EAEFd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,WAAYxF,IACrDA,MAAOiF,EAASwD,WAGlB,eAAC,GAAD,CACEnI,MACE,0FAEFd,SAAU,SAACQ,GAAD,OACRwF,EAAe,uBAAwBxF,IAEzCA,MAAOiF,EAASyD,uBAGlB,eAAC,GAAD,CACEpI,MACE,gGAEFd,SAAU,SAACQ,GAAD,OACRwF,EAAe,uBAAwBxF,IAEzCA,MAAOiF,EAAS0D,uBAGlB,eAAC,GAAD,CACErI,MAAO,wCACPd,SAAU,SAACQ,GAAD,OAAgBwF,EAAe,iBAAkBxF,IAC3DA,MAAOiF,EAAS2D,iBAGlB,eAAC,GAAD,UACE,eAAC,KAAD,CAAQ9H,KAAK,UAAUC,QAAS0E,EAAU1F,KAAM,QAAhD,2BCjGG8I,GAA0B,WACrC,MAAuD/D,GACrDvJ,EAAMqB,UADR,oBAAOqI,EAAP,KAAiBzF,EAAjB,KAA2BgG,EAA3B,KAA2CC,EAA3C,KAIA,OACE,uCACE,eAAC,GAAD,CAAWhG,KAAMlE,EAAMqB,WACvB,gBAAC,KAAD,CAAM8I,OAAO,WAAW7E,UAAW,eAAnC,UACE,eAAC,KAAD,CAAK8E,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,gFAAjB,SACE,eAAC,GAAD,CACE9C,QAAS,CACP,wBACA,wBACA,qCACA,4CACA,6CACA,+BACA,yBACA,iBACA,uBACA,cACA,mCACA,sBAEFC,gBAAe,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAU6D,uBAC3BtJ,SAAU,SAACuJ,GAAD,OACRvD,EAAe,yBAA0BuD,IAE3C9G,MAAO,EACPD,YAAU,UAMlB,eAAC,KAAD,CAAK2D,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,sFAAjB,SACE,eAAC,GAAD,CACE9C,QAAS,CACP,sBACA,mCACA,8DACA,iCACA,sDACA,kBACA,6BACA,0CACA,+BACA,qCACA,wBACA,uBACA,cACA,gCACA,qCACA,sEAEFC,gBAAe,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAU+D,gBAC3BxJ,SAAU,SAACuJ,GAAD,OACRvD,EAAe,kBAAmBuD,IAEpC9G,MAAO,EACPD,YAAU,UAMlB,eAAC,KAAD,CAAK2D,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,2EAAjB,SACE,eAAC,KAAM6B,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCpH,SAAUA,EACV9D,KAAM,gBACNsE,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUgE,cACjB/F,YAAY,oBACZnD,KAAK,gBAMb,eAAC,GAAD,UACE,eAAC,KAAD,CAAQe,KAAK,UAAUC,QAAS0E,EAAU1F,KAAM,QAAhD,2B,qBClFGmJ,GAA4B,WACvC,MAA8B/G,oBAAS,GAAvC,oBAAOgH,EAAP,KAAgBC,EAAhB,KAEA,EACEtE,GAAavJ,EAAMsB,YADrB,oBAAOoI,EAAP,KAAiBzF,EAAjB,KAA2BgG,EAA3B,KAAqDH,GAArD,WAGMhG,EAAWC,eACX+J,EAAc9J,cAAY,SAACxD,GAAD,OAAqBA,EAAMqC,QAW3D,OACE,uCACE,eAAC,GAAD,CAAWqB,KAAMlE,EAAMsB,aACvB,gBAAC,KAAD,CAAM6I,OAAO,WAAW7E,UAAW,eAAnC,UACE,eAAC,KAAD,CAAK8E,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,+EAAjB,SACE,eAAC,GAAD,CACE9C,QAAS,CACP,+BACA,2BACA,cACA,4BACA,sCACA,0DAEFC,gBAAe,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAUqE,yBAC3B9J,SAAU,SAACuJ,GAAD,OACRvD,EAAe,2BAA4BuD,IAE7C9G,MAAO,EACPD,YAAU,UAMlB,eAAC,KAAD,CAAK2D,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,4EAAjB,SACE,eAAC,GAAD,CACE9C,QAAS,CACP,4BACA,oCACA,2CACA,8BACA,mCAEFC,gBAAe,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAUsE,eAC3B/J,SAAU,SAACuJ,GAAD,OACRvD,EAAe,iBAAkBuD,IAEnC9G,MAAO,EACPD,YAAU,UAMlB,eAAC,KAAD,CAAK2D,OAAQ,CAAC,GAAI,IAAlB,SACE,eAAC,KAAD,CAAKa,KAAM,GAAX,SACE,eAAC,KAAKV,KAAN,CAAWlB,MAAM,uEAAjB,SACE,eAAC,KAAM6B,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCpH,SAAUA,EACV9D,KAAM,gBACNsE,MAAK,OAAEiF,QAAF,IAAEA,OAAF,EAAEA,EAAUuE,gBACjBtG,YAAY,sBACZnD,KAAK,gBAMb,gBAAC,GAAD,WACE,eAAC,KAAD,CAAUP,SArEI,SAACiF,GACrB2E,EAAW3E,EAAE9C,OAAO8H,UAoEqBA,QAASN,EAA5C,gDAGA,eAAC,KAAD,CACErI,KAAK,UACLC,QA/Ee,WACvBsE,IACAhG,EpByBF,uCAAM,WAAOA,EAAeqK,GAAtB,eAAAC,EAAA,6DACJtK,EAAS1B,KADL,SAGIiM,EAAaF,IAAWvL,OAH5B,SAKI0L,IAAMC,KAAK,gBAAX,2BACDF,GADC,IAEJG,YAAaC,KAAKC,SAPlB,OAUF5K,EAASzB,KAVP,gDAYFyB,EAASxB,EAAkB,EAAD,KAC1B4D,IAAQjE,MAAM,qCAbZ,yDAAN,0DoBqDUuC,KAAM,QACNmC,UAAWiH,EACX5L,QAAS8L,EAAY9L,QALvB,8C,UC/EJ2M,GAAa,SAACtO,GAElB,OADuBA,EAAc,GAEnC,KAAK,EACH,OAAO,eAAC,GAAD,IACT,KAAK,EACH,OAAO,eAAC,GAAD,IACT,KAAK,EACH,OAAO,eAAC,GAAD,IACT,KAAK,EACH,OAAO,eAAC,GAAD,IACT,KAAK,EACH,OAAO,eAAC,GAAD,IACT,KAAK,EACH,OAAO,eAAC,GAAD,IACT,QACE,OAAO,oDAIAuO,GAAS,WACpB,IAAMvO,EAAc2D,cAClB,SAACxD,GAAD,OAAqBA,EAAMmC,QAAQtC,eAWrC,OARA0J,qBAAU,WACR8E,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,aAEX,CAAC5O,IAGF,uCACE,eAAC6O,GAAA,EAAD,UACE,6CAAW7O,EAAY,EAAvB,8BAEF,gBAACgD,GAAD,WACE,eAAC,GAAD,IACA,gBAACG,GAAD,WACE,eAAC,GAAD,IACA,eAACE,GAAD,UAAOiL,GAAWtO,e,oBC1DfgD,GAAUC,KAAOC,IAAV,8gCCFL,OAA0B,iCCQjC4L,GAAUC,KAAVD,MAEFE,GAAmB,CAAC,2HAAD,ipCAeZC,GAAO,WAClB,MAAkC1I,oBAAS,GAA3C,oBAAO2I,EAAP,KAAkBC,EAAlB,KAEM1L,EAAWC,eAQjB,OACE,uCACE,eAAC,GAAD,IACA,gBAAC,GAAD,WACE,oCACE,sBAAK0L,IAAKC,GAAUC,IAAK,SACzB,sBAAKrK,UAAW,gBAAhB,SACE,qBAAIA,UAAW,QAAf,0IAOJ,uBAAKA,UAAW,kBAAhB,UACE,gBAAC,KAAD,CAAUsK,iBAAkB,CAAC,KAAMC,WAAW,EAA9C,UACE,gBAACV,GAAD,CAAOW,OAAO,mCAAd,UACE,0qBAaA,gCACE,gFACA,yFACA,+FAGA,iFACA,8HAIA,gKAMF,wIA/BmD,KAoCrD,eAACX,GAAD,CAAOW,OAAO,oBAAd,SACGT,GAAiBzK,KAAI,SAACmL,EAAMlL,GAAP,OACpB,6BAAgBkL,GAARlL,OAF0B,QAOxC,sBAAKS,UAAW,YAAhB,SACE,eAAC,KAAD,CAAUrB,SAlEH,SAACiF,GAChBsG,EAAatG,EAAE9C,OAAO8H,UAiEgBA,QAASqB,EAAvC,oEAMJ,+BACE,eAAC,KAAD,CACEhK,KAAK,UACLyK,OAAK,EACLrJ,UAAW4I,EACX/J,QAzEO,kBAAM1B,EAAStC,MA0EtBgD,KAAM,QALR,+B,UCrGJyL,GAASC,aAAH,0HAKC7M,GAAUC,KAAOC,IAAV,4OAQE0M,ICVTE,GAAgB,WAC3B,OACE,uCACE,eAACjB,GAAA,EAAD,UACE,kDAEF,gBAAC,GAAD,WACE,eAAC,KAAD,CACEkB,OAAO,UACPrL,MAAM,aACNsL,SAAS,kDAJb,WCFOC,GAAM,WACjB,IAAMtP,EAAsBgD,cAC1B,SAACxD,GAAD,OAAqBA,EAAMoC,OAAO5B,uBAKpC,OAFwBgD,cAAY,SAACxD,GAAD,OAAqBA,EAAMqC,KAAKX,WAExC,eAAC,GAAD,IAG1B,qCACGlB,EAAsB,eAAC,GAAD,IAAa,eAAC,GAAD,OCN3BuP,I,cAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,KAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,KAAD,CAAUjO,MAAOA,EAAjB,SACE,eAAC,GAAD,QAGJyC,SAASyL,eAAe,SAM1BZ,O","file":"static/js/main.ffb18c33.chunk.js","sourcesContent":["export enum Steps {\r\n  PERSONAL = \"personal\",\r\n  PROFESSIONAL = \"professional\",\r\n  PERCEPTION = \"perception\",\r\n  MATURITY = \"maturity\",\r\n  CULTURE = \"culture\",\r\n  TOOLS = \"tools\",\r\n  BENEFITS = \"benefits\",\r\n  CHALLENGES = \"challenges\",\r\n}\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface StepperState {\r\n  currentStep: number;\r\n}\r\n\r\nconst initialState: StepperState = { currentStep: 0 };\r\n\r\nconst stepperSlice = createSlice({\r\n  name: \"stepper\",\r\n  initialState,\r\n  reducers: {\r\n    nextStep(state) {\r\n      state.currentStep++;\r\n    },\r\n    prevStep(state) {\r\n      state.currentStep--;\r\n    },\r\n    goStep(state, action: PayloadAction<number>) {\r\n      state.currentStep = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { nextStep, prevStep, goStep } = stepperSlice.actions;\r\nexport const { reducer: stepperReducer } = stepperSlice;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Steps } from \"./types\";\r\n\r\ntype FormState = Record<string, any>;\r\n\r\nconst initialState: FormState = {\r\n  consentFormAccepted: false,\r\n  [Steps.PROFESSIONAL]: {},\r\n  [Steps.PERCEPTION]: {},\r\n  [Steps.MATURITY]: {},\r\n  [Steps.CULTURE]: {},\r\n  [Steps.BENEFITS]: {},\r\n  [Steps.CHALLENGES]: {},\r\n};\r\n\r\nconst surveySlice = createSlice({\r\n  name: \"survey\",\r\n  initialState,\r\n  reducers: {\r\n    acceptAgreement(state) {\r\n      state.consentFormAccepted = true;\r\n    },\r\n    resetAgreement(state) {\r\n      state.consentFormAccepted = false;\r\n    },\r\n\r\n    setStepData(state, action) {\r\n      const { key, stepData } = action.payload;\r\n      state[key] = stepData;\r\n    },\r\n    resetStepData(state, action: PayloadAction<string>) {\r\n      state[action.payload] = {};\r\n    },\r\n\r\n    resetSurvey() {\r\n      return initialState;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setStepData,\r\n  resetStepData,\r\n  acceptAgreement,\r\n  resetAgreement,\r\n  resetSurvey,\r\n} = surveySlice.actions;\r\nexport const { reducer: surveyReducer } = surveySlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { AppState } from \"../../store/rootReducer\";\r\n\r\nexport interface SaveSurveyState {\r\n  error: null | string;\r\n  loading: boolean;\r\n  success: boolean;\r\n}\r\n\r\nconst initialState: SaveSurveyState = {\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\nconst saveSurveySlice = createSlice({\r\n  name: \"save-survey\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    saveSurveyInit(state) {\r\n      state.error = null;\r\n      state.loading = true;\r\n      state.success = false;\r\n    },\r\n    saveSurveySuccess(state) {\r\n      state.loading = false;\r\n      state.success = true;\r\n    },\r\n    saveSurveyFailure(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    resetSaveSurveyState() {\r\n      return initialState;\r\n    },\r\n  },\r\n});\r\n\r\nconst { saveSurveyInit, saveSurveySuccess, saveSurveyFailure } =\r\n  saveSurveySlice.actions;\r\nexport const { resetSaveSurveyState } = saveSurveySlice.actions;\r\nexport const { reducer: saveSurveyReducer } = saveSurveySlice;\r\n\r\nexport const callSaveSurveyAPI =\r\n  () => async (dispatch: any, getState: () => AppState) => {\r\n    dispatch(saveSurveyInit());\r\n    try {\r\n      const surveyData = getState().survey;\r\n\r\n      await axios.post(\"/api/response\", {\r\n        ...surveyData,\r\n        submittedAt: Date.now(),\r\n      });\r\n\r\n      dispatch(saveSurveySuccess());\r\n    } catch (error) {\r\n      dispatch(saveSurveyFailure(error));\r\n      message.error(\"We failed to save your responses!\");\r\n    }\r\n  };\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport { stepperReducer } from \"../pages/Survey/Stepper/stepperSlice\";\r\nimport { surveyReducer } from \"../pages/Survey/surveySlice\";\r\nimport { saveSurveyReducer } from \"../pages/Survey/submitSurveySlice\";\r\n\r\nexport const applicationReducer = combineReducers({\r\n  stepper: stepperReducer,\r\n  survey: surveyReducer,\r\n  save: saveSurveyReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof applicationReducer>;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { applicationReducer } from \"./rootReducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware({ immutableCheck: false })];\r\n\r\nexport const store = configureStore({\r\n  reducer: applicationReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: minmax(200px, 350px) auto;\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 80px auto;\r\n  }\r\n`;\r\n\r\nexport const SurveyWrapper = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 12px 48px;\r\n  min-height: calc(100vh - 100px);\r\n  width: 100%;\r\n  max-width: 1440px;\r\n  @media (max-width: 1024px) {\r\n    min-height: auto;\r\n    padding: 24px 24px 24px 24px;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.aside`\r\n  background-color: #f9f9f9;\r\n  padding: 48px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 100vh;\r\n  z-index: 2;\r\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);\r\n  @media (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MobileStepper = styled.div`\r\n  width: 100%;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 2;\r\n  > span {\r\n    margin-right: 12px;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n  }\r\n  @media (min-width: 1023px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Select, Steps, Form } from \"antd\";\r\nimport { goStep } from \"./stepperSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../store/rootReducer\";\r\n\r\nimport { Wrapper, MobileStepper } from \"./styled\";\r\n\r\nexport const Stepper = () => {\r\n  const dispatch = useDispatch();\r\n  const currentStep = useSelector(\r\n    (state: AppState) => state.stepper.currentStep\r\n  );\r\n\r\n  const onChange = (step: number) => {\r\n    dispatch(goStep(step));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MobileStepper>\r\n        <span>{`Step ${currentStep + 1}/${steps.length}`}</span>\r\n        <Select\r\n          style={{ width: \"70%\", maxWidth: \"250px\" }}\r\n          size={\"large\"}\r\n          value={currentStep.toString()}\r\n          onChange={(val: string) => onChange(+val)}\r\n        >\r\n          {steps.map((step, index) => (\r\n            <Select.Option key={index} value={index.toString()}>{step.title}</Select.Option>\r\n          ))}\r\n        </Select>\r\n      </MobileStepper>\r\n      <Wrapper>\r\n        <Steps current={currentStep} onChange={onChange} direction=\"vertical\">\r\n          {steps.map((step, index) => (\r\n            <Steps.Step key={index} title={step.title} description={step.description} />\r\n          ))}\r\n        </Steps>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\ntype Step = {\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\nconst steps: Step[] = [\r\n  {\r\n    title: \"Professional Background\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    title: \"DevOps Perception\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    title: \"DevOps Maturity\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    title: \"DevOps Culture\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    title: \"DevOps Benefits\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    title: \"DevOps Challenges\",\r\n    description: \"\",\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 12px 32px;\r\n\r\n  @media (max-width: 1024px) {\r\n    padding: 24px;\r\n  }\r\n\r\n  .topbar {\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    background-color: #f9f9f9;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    button {\r\n      min-width: 50px;\r\n    }\r\n    .contact-button {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      padding: 6px !important;\r\n      svg {\r\n        margin-right: 4px;\r\n      }\r\n      @media (max-width: 768px) {\r\n        margin: 6px 0;\r\n      }\r\n    }\r\n    @media (max-width: 768px) {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import { Button, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { Wrapper } from \"./styled\";\r\nimport { IoMdMail, IoLogoLinkedin } from \"react-icons/io\";\r\nimport { LinkedinOutlined } from \"@ant-design/icons\";\r\n\r\nconst emailAddress = \"dpetrov1@sheffield.ac.uk\";\r\nconst linkedIn = \"https://www.linkedin.com/in/dayanpetrow/\";\r\n\r\nexport const TopBar = () => {\r\n  const onCopy = () => {\r\n    const textField = document.createElement(\"textarea\");\r\n    textField.innerText = emailAddress;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    document.execCommand(\"copy\");\r\n    textField.remove();\r\n\r\n    message.success(`Email address was coppied to clipboard!`);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className={\"topbar\"}>\r\n        <Button\r\n          type=\"link\"\r\n          onClick={onCopy}\r\n          size={\"small\"}\r\n          className={\"contact-button\"}\r\n        >\r\n          <IoMdMail size={24} />\r\n          {emailAddress}\r\n        </Button>\r\n        <Button\r\n          type=\"link\"\r\n          size={\"small\"}\r\n          className={\"contact-button\"}\r\n          href={linkedIn}\r\n          target={'_blank'}\r\n        >\r\n          <IoLogoLinkedin size={24} />\r\n          Dayan Petrow\r\n        </Button>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #f9f9f9;\r\n  padding: 8px 12px;\r\n  margin: 12px 0px 6px 0px;\r\n  border-radius: 4px;\r\n  > h3 {\r\n    letter-spacing: 1;\r\n    text-transform: uppercase;\r\n    padding: 0;\r\n    margin: 0;\r\n    @media (max-width: 600px) {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SubSectionTitle: React.FC<Props> = ({ title }) => {\r\n  return (\r\n    <Wrapper>\r\n      <h3>{title}</h3>\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Select, Divider, Input, message } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\ninterface Props {\r\n  options: string[];\r\n  selectedOptions: string[];\r\n  onChange: (selectedOptions: string[]) => void;\r\n  disableAdd?: boolean;\r\n  disabled?: boolean;\r\n  limit?: number;\r\n}\r\n\r\nexport const MultipleSelect: React.FC<Props> = ({\r\n  options = [],\r\n  selectedOptions = [],\r\n  onChange,\r\n  disableAdd = false,\r\n  disabled = false,\r\n  limit,\r\n}) => {\r\n  const [ownOptions, setOwnOptions] = useState([] as string[]);\r\n  const [newOptionName, setNewOptionName] = useState(\"\");\r\n  const [hasLimitError, setHasLimitError] = useState(false);\r\n\r\n  const onNameChange = (event: any) => {\r\n    setNewOptionName(event.target.value);\r\n  };\r\n\r\n  const addItem = () => {\r\n    setOwnOptions([...ownOptions, newOptionName]);\r\n    setNewOptionName(\"\");\r\n  };\r\n\r\n  const handleChange = (selectedItems: string[]) => {\r\n    setHasLimitError(false);\r\n\r\n    if (limit && limit < selectedItems.length) {\r\n      setHasLimitError(true);\r\n      message.error(`You cannot select more than ${limit} options.`);\r\n      return;\r\n    }\r\n\r\n    onChange(selectedItems);\r\n  };\r\n\r\n  const onBlur = () => setHasLimitError(false);\r\n\r\n  const filteredOptions = [...options, ...ownOptions].filter(\r\n    (o) => !selectedOptions.includes(o)\r\n  );\r\n\r\n  return (\r\n    <Select\r\n      size={\"large\"}\r\n      mode={\"multiple\"}\r\n      placeholder=\"Select multiple...\"\r\n      value={selectedOptions}\r\n      onChange={handleChange}\r\n      style={{ width: \"100%\" }}\r\n      className={hasLimitError ? \"limit-error\" : \"\"}\r\n      onBlur={onBlur}\r\n      dropdownRender={\r\n        disableAdd\r\n          ? undefined\r\n          : (menu) => (\r\n              <div>\r\n                {menu}\r\n                <Divider style={{ margin: \"4px 0\" }} />\r\n                <div\r\n                  style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}\r\n                >\r\n                  <Input\r\n                    style={{ flex: \"auto\" }}\r\n                    value={newOptionName}\r\n                    onChange={onNameChange}\r\n                  />\r\n                  <a\r\n                    style={{\r\n                      flex: \"none\",\r\n                      padding: \"8px\",\r\n                      display: \"block\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                    onClick={addItem}\r\n                    href={\"#\"}\r\n                  >\r\n                    <PlusOutlined /> Add\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            )\r\n      }\r\n    >\r\n      {filteredOptions.map((item) => (\r\n        <Select.Option key={item} value={item}>\r\n          {item}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f9f9f9;\r\n  padding: 12px 16px;\r\n  margin-top: 16px;\r\n  border-radius: 4px;\r\n  .ant-checkbox-wrapper {\r\n    margin: 12px 0;\r\n  }\r\n  button {\r\n    height: 48px;\r\n    width: 300px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Submit: React.FC<any> = (props) => {\r\n  return <Wrapper>{props.children}</Wrapper>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.main`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Steps } from \"../../pages/Survey/types\";\r\n\r\n// icons\r\nimport {\r\n  FaUserTie,\r\n  FaQuestionCircle,\r\n  FaUsers,\r\n  FaTools,\r\n  FaStar,\r\n  FaBuffer,\r\n} from \"react-icons/fa\";\r\nimport { IoBusinessSharp } from \"react-icons/io5\";\r\nimport { ImFire } from \"react-icons/im\";\r\n\r\ninterface Props {\r\n  step: Steps;\r\n}\r\n\r\nconst renderTitle = (step: string) => {\r\n  switch (step) {\r\n    case Steps.PERSONAL:\r\n      return (\r\n        <>\r\n          <FaUserTie /> Personal Information\r\n        </>\r\n      );\r\n    case Steps.PROFESSIONAL:\r\n      return (\r\n        <>\r\n          <IoBusinessSharp /> Professional Background\r\n        </>\r\n      );\r\n    case Steps.MATURITY:\r\n      return (\r\n        <>\r\n          <FaBuffer /> DevOps Maturity\r\n        </>\r\n      );\r\n    case Steps.PERCEPTION:\r\n      return (\r\n        <>\r\n          <FaQuestionCircle /> DevOps Perception\r\n        </>\r\n      );\r\n    case Steps.CULTURE:\r\n      return (\r\n        <>\r\n          <FaUsers /> DevOps Culture\r\n        </>\r\n      );\r\n    case Steps.TOOLS:\r\n      return (\r\n        <>\r\n          <FaTools /> DevOps Tools\r\n        </>\r\n      );\r\n    case Steps.BENEFITS:\r\n      return (\r\n        <>\r\n          <FaStar /> DevOps Benefits\r\n        </>\r\n      );\r\n    case Steps.CHALLENGES:\r\n      return (\r\n        <>\r\n          <ImFire /> DevOps Challenges\r\n        </>\r\n      );\r\n\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n  letter-spacing: 1;\r\n  padding: 12px 0;\r\n  svg {\r\n    margin-right: 8px;\r\n  }\r\n  @media (max-width: 992px) {\r\n    padding: 24px;\r\n    justify-content: center;\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const StepTitle: React.FC<Props> = ({ step }) => {\r\n  return <Wrapper className={\"step-title\"}>{renderTitle(step)}</Wrapper>;\r\n};\r\n","import React from \"react\";\r\nimport { Radio } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  value: any;\r\n  onChange: (value: string) => void;\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 42px;\r\n  display: grid;\r\n  grid-template-columns: 7fr 5fr;\r\n  padding: 8px 8px;\r\n  transition: 0.3s ease all;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 6px 0;\r\n    border-bottom: 1px solid #e9e9e9;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto;\r\n  }\r\n\r\n  .options {\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 2fr);\r\n  }\r\n\r\n  &:hover {\r\n    transition: 0.3s ease all;\r\n    background-color: #e8f3ff;\r\n  }\r\n  &.headings {\r\n    font-weight: 600;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    background-color: #f9f9f9;\r\n    @media (max-width: 768px) {\r\n      display: none;\r\n    }\r\n  }\r\n  .option,\r\n  .ant-radio-wrapper {\r\n    display: flex;\r\n    text-align: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 2px;\r\n    > span {\r\n      padding: 0px;\r\n    }\r\n\r\n    @media (max-width: 769px) {\r\n      > span {\r\n        text-align: center;\r\n      }\r\n    }\r\n    @media (max-width: 769px) {\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n      align-items: center;\r\n    }\r\n  }\r\n  .ant-radio-inner {\r\n    border: 1px solid #424242;\r\n  }\r\n  .label {\r\n    text-align: center;\r\n    font-size: 11px;\r\n    line-height: 11px;\r\n    @media (min-width: 769px) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .ant-radio {\r\n    margin: 4px;\r\n  }\r\n`;\r\n\r\nexport const Scale: React.FC<Props> = (props) => {\r\n  const { title, value, onChange } = props;\r\n\r\n  const _onChange = (e: any) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className={\"title\"}>{title}</div>\r\n      <div className={\"options\"}>\r\n        {options.map((_opt: any, index: number) => (\r\n          <div className={\"option\"} onClick={() => onChange(_opt.value)} key={_opt.value}>\r\n            <Radio.Group\r\n              onChange={_onChange}\r\n              value={value}\r\n              size={\"large\"}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <Radio value={_opt.value}>\r\n                <span className={\"label\"}>{options[index].label}</span>\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport const ScaleLabels = () => {\r\n  return (\r\n    <Wrapper className={\"headings\"}>\r\n      <div className={\"title\"}></div>\r\n      <div className={\"options\"}>\r\n        {options.map((_opt: any) => (\r\n          <div key={_opt.value}className={\"option\"}>{_opt.label}</div>\r\n        ))}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst options = [\r\n  { value: \"1\", label: \"Strongly Disagree\" },\r\n  { value: \"2\", label: \"Disagree\" },\r\n  { value: \"3\", label: \"Neutral or N/A\" },\r\n  { value: \"4\", label: \"Agree\" },\r\n  { value: \"5\", label: \"Strongly Agree\" },\r\n];\r\n\r\n/**\r\n * set of practices for promoting better collaboration and extensive automation of the processes occurring between operational and development teams\r\n */\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../store/rootReducer\";\r\nimport { nextStep } from \"../Stepper/stepperSlice\";\r\nimport { setStepData } from \"../surveySlice\";\r\n\r\nexport const useStepUtils = (stepName: any) => {\r\n  const dispatch = useDispatch();\r\n  const stepState = useSelector((state: AppState) => state.survey[stepName]);\r\n\r\n  const [formData, setFormData] = useState({} as any);\r\n  const submitData = useRef(formData);\r\n\r\n  const onChange = (event: any) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onChangeByName = (name: string, value: any) => {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const saveStepData = () => {\r\n    const payload = {\r\n      key: stepName,\r\n      stepData: submitData.current,\r\n    };\r\n\r\n    dispatch(setStepData(payload));\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    dispatch(nextStep());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormData(stepState);\r\n\r\n    return () => {\r\n      saveStepData();\r\n    };\r\n  }, []);\r\n\r\n  // allow auto-save on component unmount\r\n  useEffect(() => {\r\n    submitData.current = formData;\r\n  }, [formData]);\r\n\r\n  return [formData, onChange, onChangeByName, onSubmit, saveStepData];\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Row, Col, Select } from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport { SubSectionTitle, Submit, StepTitle } from \"../../../components\";\r\n\r\nimport { useStepUtils } from \"./useStepUtils\";\r\n\r\nexport const Professional: React.FC<any> = () => {\r\n  const [formData, onChange, onChangeByName, onSubmit] = useStepUtils(\r\n    Steps.PROFESSIONAL\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.PROFESSIONAL} />\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <SubSectionTitle title={\"Your Position\"} />\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} lg={8}>\r\n            <Form.Item label=\"Position\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) => onChangeByName(\"position\", value)}\r\n                value={formData?.position}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"1\", text: \"Software Development\" },\r\n                  { value: \"2\", text: \"Cloud/DevOps\" },\r\n                  { value: \"3\", text: \"Leadership/Management\" },\r\n                  { value: \"4\", text: \"Design\" },\r\n                  { value: \"5\", text: \"Testing\" },\r\n                  { value: \"6\", text: \"Other\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} lg={8}>\r\n            <Form.Item label=\"Years of Experience\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) => onChangeByName(\"experience\", value)}\r\n                value={formData?.experience}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"1\", text: \"0-2\" },\r\n                  { value: \"2\", text: \"3-5\" },\r\n                  { value: \"3\", text: \"6-10\" },\r\n                  { value: \"4\", text: \"11-20\" },\r\n                  { value: \"5\", text: \"More than 20\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <SubSectionTitle title={\"Your Company\"} />\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} lg={12} xl={8}>\r\n            <Form.Item label=\"Company Nationality\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) =>\r\n                  onChangeByName(\"companyNationality\", value)\r\n                }\r\n                value={formData?.companyNationality}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"1\", text: \"Bulgarian and operates in Bulgaria\" },\r\n                  {\r\n                    value: \"2\",\r\n                    text: \"Bulgarian and operates internationally\",\r\n                  },\r\n                  { value: \"3\", text: \"Multinational\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} lg={12} xl={8}>\r\n            <Form.Item label=\"Company Size\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) => onChangeByName(\"companySize\", value)}\r\n                value={formData?.companySize}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"1\", text: \"1-19\" },\r\n                  { value: \"2\", text: \"20-99\" },\r\n                  { value: \"3\", text: \"100-249\" },\r\n                  { value: \"4\", text: \"250-499\" },\r\n                  { value: \"5\", text: \"500-1999\" },\r\n                  { value: \"6\", text: \"More than 2000\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} lg={12} xl={8}>\r\n            <Form.Item label=\"Company Orientation\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) =>\r\n                  onChangeByName(\"companyOrientation\", value)\r\n                }\r\n                value={formData?.companyOrientation}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"1\", text: \"Service\" },\r\n                  { value: \"2\", text: \"Product\" },\r\n                  { value: \"3\", text: \"Mixed\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Submit>\r\n          <Button type=\"primary\" onClick={onSubmit} size={\"large\"}>\r\n            Next\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n  Radio,\r\n  Select,\r\n} from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport {\r\n  SubSectionTitle,\r\n  Submit,\r\n  StepTitle,\r\n  MultipleSelect,\r\n} from \"../../../components\";\r\n\r\nimport { useStepUtils } from \"./useStepUtils\";\r\n\r\nexport const Perception: React.FC<any> = () => {\r\n  const [formData, onChange, onChangeByName, onSubmit] = useStepUtils(\r\n    Steps.PERCEPTION\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.PERCEPTION} />\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"What is your definition of DevOps?\">\r\n              <Input.TextArea\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                onChange={onChange}\r\n                name={\"devOpsDefinition\"}\r\n                value={formData?.devOpsDefinition}\r\n                placeholder=\"Describe DevOps?\"\r\n                size=\"large\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} xl={24}>\r\n            <Form.Item label=\"How would you describe DevOps in relation to Agile?\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                value={formData?.agileRelation}\r\n                onChange={(value) => onChangeByName(\"agileRelation\", value)}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"0\", text: \"DevOps has no relation with Agile\" },\r\n                  { value: \"1\", text: \"DevOps aims to replace Agile\" },\r\n                  { value: \"2\", text: \"DevOps extends Agile\" },\r\n                  { value: \"3\", text: \"I don't know\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Submit>\r\n          <Button type=\"primary\" onClick={onSubmit} size={\"large\"}>\r\n            Next\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Input, Button, InputNumber, Row, Col, Select } from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport {\r\n  SubSectionTitle,\r\n  Submit,\r\n  StepTitle,\r\n  MultipleSelect,\r\n  Scale,\r\n  ScaleLabels,\r\n} from \"../../../components\";\r\n\r\nimport { useStepUtils } from \"./useStepUtils\";\r\n\r\nexport const Maturity: React.FC<any> = () => {\r\n  const [formData, onChange, onChangeByName, onSubmit] = useStepUtils(\r\n    Steps.MATURITY\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.MATURITY} />\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item label=\"How long does it take to go from code committed to code successfully running in production?\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) => onChangeByName(\"leadTime\", value)}\r\n                value={formData?.leadTime}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"0\", text: \"More than one month\" },\r\n                  { value: \"2\", text: \"One week to one month\" },\r\n                  { value: \"4\", text: \"One day to one week\" },\r\n                  { value: \"6\", text: \"Less than one day\" },\r\n                  { value: \"8\", text: \"Less than one hour\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item label=\"How often does your team deploy code to production?\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) =>\r\n                  onChangeByName(\"deploymentFrequency\", value)\r\n                }\r\n                value={formData?.deploymentFrequency}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"8\", text: \"Multiple deploys per day or on demand\" },\r\n                  { value: \"6\", text: \"Once per day\" },\r\n                  { value: \"4\", text: \"Multiple deploys per week\" },\r\n                  {\r\n                    value: \"2\",\r\n                    text: \"Between once per week and once per month\",\r\n                  },\r\n                  { value: \"0\", text: \"Fewer than once per month\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item label=\"How long does it take to restore a service after an infrastructure incident or defect?\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) => onChangeByName(\"timeToRestore\", value)}\r\n                value={formData?.timeToRestore}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"0\", text: \"More than a month\" },\r\n                  { value: \"2\", text: \"One week to one month\" },\r\n                  { value: \"4\", text: \"One day to one week\" },\r\n                  { value: \"6\", text: \"Less than one day\" },\r\n                  { value: \"8\", text: \"Less than one hour\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item\r\n              label=\"What percentage of production changes result in degraded service?\"\r\n              tooltip={\r\n                \"Production changes that cause issues and later require additional work be resolved, including hotfixes, bugfixes, UX improvements, etc\"\r\n              }\r\n            >\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) =>\r\n                  onChangeByName(\"changeFailPercentage\", value)\r\n                }\r\n                value={formData?.changeFailPercentage}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  { value: \"10\", text: \"0–15%\" },\r\n                  { value: \"8\", text: \"16–30%\" },\r\n                  { value: \"6\", text: \"31–45%\" },\r\n                  { value: \"4\", text: \"46–60%\" },\r\n                  { value: \"2\", text: \"61–75%\" },\r\n                  { value: \"0\", text: \"76–100%\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item label=\"Who has the responsibility for creating and maintaining your team's CI/CD toolchain?\">\r\n              <Select\r\n                placeholder={\"Select one...\"}\r\n                onChange={(value) =>\r\n                  onChangeByName(\"toolchainResponsibility\", value)\r\n                }\r\n                value={formData?.toolchainResponsibility}\r\n                size={\"large\"}\r\n              >\r\n                {[\r\n                  {\r\n                    value: \"4\",\r\n                    text: \"My team has full autonomy to choose and configure its own toolchain\",\r\n                  },\r\n                  {\r\n                    value: \"3\",\r\n                    text: \"The toolchain is maintained by a centralized team within my company\",\r\n                  },\r\n                  {\r\n                    value: \"2\",\r\n                    text: \"My team uses a toolchain with preconfigured scripts, and we have the ability to override it\",\r\n                  },\r\n                  { value: \"1\", text: \"Other\" },\r\n                ].map((_option: any) => (\r\n                  <Select.Option key={_option.value} value={_option.value}>\r\n                    {_option.text}\r\n                  </Select.Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} xl={12}>\r\n            <Form.Item label=\"Which tools are part of your team's toolchain?\">\r\n              <MultipleSelect\r\n                selectedOptions={formData.toolchainIncludes}\r\n                onChange={(value) => onChangeByName(\"toolchainIncludes\", value)}\r\n                options={[\r\n                  \"Automated unit tests\",\r\n                  \"Automated build\",\r\n                  \"Automated deployment to testing environments\",\r\n                  \"Automated deployment to production\",\r\n                  \"Automated performance testing\",\r\n                  \"Automated security testing\",\r\n                  \"Automated acceptance testing\",\r\n                  \"Integration with monitoring tools\",\r\n                  \"Integration with logging tools\",\r\n                ]}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ScaleLabels />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team has the ability to deploy our system to production at any time, on demand\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"onDemandDeployment\", value)}\r\n          value={formData.onDemandDeployment}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team can release software to production during normal business hours with negligible downtime\"\r\n          }\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"businessHoursDeployments\", value)\r\n          }\r\n          value={formData.businessHoursDeployments}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Code commits results in automated tests being run and an automated build of the system\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"commitAutomation\", value)}\r\n          value={formData.commitAutomation}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Failing tests will prevent a commit to progress through the pipeline\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"failingTests\", value)}\r\n          value={formData.failingTests}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team actively identifies and automates repetitive manual work\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"activelyAutomates\", value)}\r\n          value={formData.activelyAutomates}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team has predefined protocols for handling production incidents\"\r\n          }\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"productionIncidents\", value)\r\n          }\r\n          value={formData.productionIncidents}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team has access to tools that help us understand, trace and diagnose system and infrastructure problems\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"monitoringIssues\", value)}\r\n          value={formData.monitoringIssues}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team has access to tools that monitor key business and system metrics\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"monitorMetrics\", value)}\r\n          value={formData.monitorMetrics}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Security reviews are regularly performed during the development process\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"securityReviews\", value)}\r\n          value={formData.securityReviews}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Most of the code for the product I work on is documented and I can easily access and find the documentation that I need\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"documentation\", value)}\r\n          value={formData.documentation}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"My team prioritizes keeping the software in deployable state over development of new features\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"deployableState\", value)}\r\n          value={formData.deployableState}\r\n        />\r\n\r\n        <Submit>\r\n          <Button type=\"primary\" onClick={onSubmit} size={\"large\"}>\r\n            Next\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\n// Once I have access, I can independently provision and configure the cloud resources and capabilities required for my product or service on demand without raising tickets or requiring human interaction.\r\n// My team prioritizes keeping the software deployable over working on new features.\r\n\r\n// who has the responsibility for creating and maintaining CI/CD toolchain\r\n// our team has full autonomy to choose and configure its own toolchain\r\n// the toolchain is handled by a centralized team\r\n// we use a toolchain with preconfigured scripts and test, and we have the ability to override it\r\n// other\r\n\r\n// my toolchain includes -\r\n// my team makes use of open source components, libraries and platforms\r\n\r\n// do you have the technical knowledge to setup CI/CD pipelines?\r\n// do you have the technical knowledge to manage infrastructure through Infrastructure-As-Code?\r\n// My team actively identifies and eliminates, automates, or streamlines repetitive manual work.\r\n// My team has well-defined protocols and tools for responding to production incidents.\r\n// What percentage of your time is spent on rework or unplanned work?\r\n\r\n// my team actively identifies and eliminates, automates, or streamlines repetitive manual work\r\n// alerts are configured for monitoring issues\r\n// my team has well-defined protocols and tools for responding to production incidents\r\n\r\n// we can perform deployments during normal business hors with negligable downtime\r\n\r\n// code commits result in automated build of software\r\n// code commits result in automated tests being run\r\n// failing tests will block a commit's progress through the pipeline\r\n// we can deploy our system to production at any time, on demand\r\n// my team has access to tools that help us trace, understand and diagnose infrastructure problems\r\n// my team has tools that monitor key business and system metrics\r\n// my team has tools that help us understand and debug our system in production\r\n// most of the code for the product I work on is documented\r\n// it is easy to find the right technical documentation when I need to understand something\r\n","import React from \"react\";\r\nimport { Form, Input, Button, InputNumber, Row, Col, Radio } from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport {\r\n  SubSectionTitle,\r\n  Submit,\r\n  StepTitle,\r\n  Select,\r\n  MultipleSelect,\r\n  Scale,\r\n  ScaleLabels,\r\n} from \"../../../components\";\r\n\r\nimport { useStepUtils } from \"./useStepUtils\";\r\n\r\nexport const Culture: React.FC<any> = () => {\r\n  const [formData, onChange, onChangeByName, onSubmit] = useStepUtils(\r\n    Steps.CULTURE\r\n  );\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.CULTURE} />\r\n      <ScaleLabels />\r\n\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <SubSectionTitle title={\"In my organization...\"} />\r\n        <Scale\r\n          title={\r\n            \"Teams are generally cross-functional (developers, designers, QAs and business analysts work together in the same team)\"\r\n          }\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"multidiscplinaryTeams\", value)\r\n          }\r\n          value={formData.multidiscplinaryTeams}\r\n        />\r\n        <Scale\r\n          title={\"Cross-functional collaboration is encouraged\"}\r\n          onChange={(value: any) => onChangeByName(\"collaboration\", value)}\r\n          value={formData.collaboration}\r\n        />\r\n        <Scale\r\n          title={\"Open communication and knowledge sharing is encouraged\"}\r\n          onChange={(value: any) => onChangeByName(\"communication\", value)}\r\n          value={formData.communication}\r\n        />\r\n        <Scale\r\n          title={\"Initiative and ideas are welcomed\"}\r\n          onChange={(value: any) => onChangeByName(\"initiative\", value)}\r\n          value={formData.initiative}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Teams have the freedom to choose their technology stack independently from other teams depending on business requirements\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"technologyStack\", value)}\r\n          value={formData.technologyStack}\r\n        />\r\n\r\n        <SubSectionTitle title={\"In my team...\"} />\r\n        <Scale\r\n          title={\"There is a feeling of shared ownership and responsibility\"}\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"sharedResponsibility\", value)\r\n          }\r\n          value={formData.sharedResponsibility}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"Failures are generally treated as learning and improvement opportunities\"\r\n          }\r\n          onChange={(value: any) => onChangeByName(\"failures\", value)}\r\n          value={formData.failures}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"I feel comfortable sharing a different perspective, opinion or approach on a work issue\"\r\n          }\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"differentPerspective\", value)\r\n          }\r\n          value={formData.differentPerspective}\r\n        />\r\n\r\n        <Scale\r\n          title={\r\n            \"I don't need to communicate and coordinate with people outside of my team to complete my work\"\r\n          }\r\n          onChange={(value: any) =>\r\n            onChangeByName(\"outsideCommunication\", value)\r\n          }\r\n          value={formData.outsideCommunication}\r\n        />\r\n\r\n        <Scale\r\n          title={\"I feel connected with my team members\"}\r\n          onChange={(value: any) => onChangeByName(\"teamConnection\", value)}\r\n          value={formData.teamConnection}\r\n        />\r\n\r\n        <Submit>\r\n          <Button type=\"primary\" onClick={onSubmit} size={\"large\"}>\r\n            Next\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Row, Col, Input } from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport { Submit, StepTitle, MultipleSelect } from \"../../../components\";\r\nimport { useStepUtils } from \"./useStepUtils\";\r\n\r\nexport const Benefits: React.FC<any> = () => {\r\n  const [formData, onChange, onChangeByName, onSubmit] = useStepUtils(\r\n    Steps.BENEFITS\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.BENEFITS} />\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"What are the most important benefts of DevOps on a company level? (maximum 3)\">\r\n              <MultipleSelect\r\n                options={[\r\n                  \"Competitive advantage\",\r\n                  \"Faster time-to-market\",\r\n                  \"Ability to develop software faster\",\r\n                  \"Quality of products and services provided\",\r\n                  \"Quantity of products and services provided\",\r\n                  \"Improved customer experience\",\r\n                  \"Operational efficiency\",\r\n                  \"Cost reduction\",\r\n                  \"Rapid delivery cycle\",\r\n                  \"Scalability\",\r\n                  \"Responsiveness to customer needs\",\r\n                  \"Quicker innovation\",\r\n                ]}\r\n                selectedOptions={formData?.organizationalBenefits}\r\n                onChange={(nextSelected: string[]) =>\r\n                  onChangeByName(\"organizationalBenefits\", nextSelected)\r\n                }\r\n                limit={3}\r\n                disableAdd\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"What are the most important benefits of DevOps on a project/team level? (maximum 3)\">\r\n              <MultipleSelect\r\n                options={[\r\n                  \"Higher productivity\",\r\n                  \"Higher motivation and engagement\",\r\n                  \"Improved communication & collaboration between team members\",\r\n                  \"Reduce infrastructure problems\",\r\n                  \"Automation of repetitive work, focus on development\",\r\n                  \"Risk mitigation\",\r\n                  \"Improved incident handling\",\r\n                  \"Rolling back to previous build versions\",\r\n                  \"Continuous customer feedback\",\r\n                  \"Lower failure rate of new releases\",\r\n                  \"Improved code quality\",\r\n                  \"Rapid delivery cycle\",\r\n                  \"Scalability\",\r\n                  \"Improved deployment frequency\",\r\n                  \"Alignment and unification of goals\",\r\n                  \"Sense of shared ownership and responsibility  between team members\",\r\n                ]}\r\n                selectedOptions={formData?.projectBenefits}\r\n                onChange={(nextSelected: string[]) =>\r\n                  onChangeByName(\"projectBenefits\", nextSelected)\r\n                }\r\n                limit={3}\r\n                disableAdd\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"Could you think of any other DevOps benefits that were not listed above?\">\r\n              <Input.TextArea\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                onChange={onChange}\r\n                name={\"otherBenefits\"}\r\n                value={formData?.otherBenefits}\r\n                placeholder=\"Other benefits...\"\r\n                size=\"large\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Submit>\r\n          <Button type=\"primary\" onClick={onSubmit} size={\"large\"}>\r\n            Next\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, Row, Col, Input } from \"antd\";\r\nimport { Steps } from \"../types\";\r\nimport { Submit, StepTitle, MultipleSelect } from \"../../../components\";\r\n\r\nimport { useStepUtils } from \"./useStepUtils\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../store/rootReducer\";\r\nimport { callSaveSurveyAPI } from \"../submitSurveySlice\";\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\n\r\nexport const Challenges: React.FC<any> = () => {\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  const [formData, onChange, onChangeByName, onSubmit, saveStepData] =\r\n    useStepUtils(Steps.CHALLENGES);\r\n\r\n  const dispatch = useDispatch();\r\n  const submitState = useSelector((state: AppState) => state.save);\r\n\r\n  const onCompleteSurvey = () => {\r\n    saveStepData();\r\n    dispatch(callSaveSurveyAPI());\r\n  };\r\n\r\n  const onReadyChange = (e: any) => {\r\n    setIsReady(e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StepTitle step={Steps.CHALLENGES} />\r\n      <Form layout=\"vertical\" className={\"step-wrapper\"}>\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"What challenges do you associate DevOps with on a company level? (maximum 3)\">\r\n              <MultipleSelect\r\n                options={[\r\n                  \"Coping with cultural changes\",\r\n                  \"Upskilling current staff\",\r\n                  \"Recruitment\",\r\n                  \"Changing technology stack\",\r\n                  \"Transition to DevOps way of working\",\r\n                  \"Transitioning legacy infrastructure/projects to DevOps\",\r\n                ]}\r\n                selectedOptions={formData?.organizationalChallenges}\r\n                onChange={(nextSelected: string[]) =>\r\n                  onChangeByName(\"organizationalChallenges\", nextSelected)\r\n                }\r\n                limit={3}\r\n                disableAdd\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"What challenges do you associate DevOps with on a team level? (maximum 3)\">\r\n              <MultipleSelect\r\n                options={[\r\n                  \"Changing technology stack\",\r\n                  \"Coping with changing requirements\",\r\n                  \"Complexity of the tools and technologies\",\r\n                  \"Too many tools in existence\",\r\n                  \"Lack of documentation/resources\",\r\n                ]}\r\n                selectedOptions={formData?.teamChallenges}\r\n                onChange={(nextSelected: string[]) =>\r\n                  onChangeByName(\"teamChallenges\", nextSelected)\r\n                }\r\n                limit={3}\r\n                disableAdd\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={[16, 16]}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"Could you think of any DevOps challenges that were not listed above?\">\r\n              <Input.TextArea\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                onChange={onChange}\r\n                name={\"otherBenefits\"}\r\n                value={formData?.otherChallenges}\r\n                placeholder=\"Other challenges...\"\r\n                size=\"large\"\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Submit>\r\n          <Checkbox onChange={onReadyChange} checked={isReady}>\r\n            I am ready to submit my responses.\r\n          </Checkbox>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={onCompleteSurvey}\r\n            size={\"large\"}\r\n            disabled={!isReady}\r\n            loading={submitState.loading}\r\n          >\r\n            Complete Questionnaire\r\n          </Button>\r\n        </Submit>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../store/rootReducer\";\r\nimport { Wrapper, Main, SurveyWrapper } from \"./styled\";\r\nimport { Stepper } from \"./Stepper/Stepper\";\r\nimport { TopBar } from \"../../components/TopBar/TopBar\";\r\n\r\nimport { Personal } from \"./Steps/Personal\";\r\nimport { Professional } from \"./Steps/Professional\";\r\nimport { Perception } from \"./Steps/Perception\";\r\nimport { Maturity } from \"./Steps/Maturity\";\r\nimport { Culture } from \"./Steps/Culture\";\r\nimport { Tools } from \"./Steps/Tools\";\r\nimport { Benefits } from \"./Steps/Benefits\";\r\nimport { Challenges } from \"./Steps/Challenges\";\r\nimport { Finish } from \"./Steps/Finish\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst renderStep = (currentStep: number) => {\r\n  const normalizedStep = currentStep + 1;\r\n  switch (normalizedStep) {\r\n    case 1:\r\n      return <Professional />;\r\n    case 2:\r\n      return <Perception />;\r\n    case 3:\r\n      return <Maturity />;\r\n    case 4:\r\n      return <Culture />;\r\n    case 5:\r\n      return <Benefits />;\r\n    case 6:\r\n      return <Challenges />;\r\n    default:\r\n      return <h1>Step not found!</h1>;\r\n  }\r\n};\r\n\r\nexport const Survey = () => {\r\n  const currentStep = useSelector(\r\n    (state: AppState) => state.stepper.currentStep\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [currentStep]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${currentStep+1}/6`} DevOps Research</title>\r\n      </Helmet>\r\n      <Wrapper>\r\n        <Stepper />\r\n        <SurveyWrapper>\r\n          <TopBar />\r\n          <Main>{renderStep(currentStep)}</Main>\r\n        </SurveyWrapper>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 64px 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    img {\r\n      width: 250px;\r\n    }\r\n    .title {\r\n      text-align: center;\r\n      font-size: 32px;\r\n      padding: 6px;\r\n      margin: 0;\r\n      line-height: 44px;\r\n      width: 80%;\r\n      margin: 0 auto;\r\n      @media (max-width: 992px) {\r\n        font-size: 28px;\r\n        line-height: 32px;\r\n      }\r\n      @media (max-width: 600px) {\r\n        font-size: 22px;\r\n        line-height: 25px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .consent-wrapper {\r\n    width: 100%;\r\n    padding: 32px 6px 6px 6px;\r\n    max-width: 580px;\r\n    p {\r\n      margin-bottom: 6px;\r\n    }\r\n    .agreement {\r\n      padding: 12px;\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.f29c8fa8.png\";","import React, { useState } from \"react\";\r\nimport { Button, Checkbox, Collapse } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { acceptAgreement } from \"../Survey/surveySlice\";\r\nimport { TopBar } from \"../../components/TopBar/TopBar\";\r\nimport { Wrapper } from \"./styled\";\r\nimport shefLogo from \"../../logo.png\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst consentParagrahs = [\r\n  `I have read and understood the project information sheet dated 20/07/2021 or the project has been fully explained to me.`,\r\n  `I have been given the opportunity to ask questions about the project.`,\r\n  `I agree to take part in the project. I understand that taking part in the project will include completing a questionnaire. I understand that the questionnaire is expected to take approximately 10 to 15 minutes to complete.\r\n`,\r\n  `I understand that my survey responses are completely anonymous. I understand that once the questionnaire is submitted the researchers will not be able to identify or remove my responses.\r\n`,\r\n  `I understand and agree that my words may be quoted in publications, reports, web pages, and other research outputs. I understand that I will not be named in these outputs.\r\n`,\r\n  `I understand that taking part is voluntary and that I can withdraw from the study at any time before the submission of the questionnaire. I do not have to give any reasons for why I no longer want to take part and there will be no adverse consequences if I choose to withdraw.\r\n`,\r\n  `I understand that by choosing to participate as a volunteer in this research, this does not create a legally binding agreement nor is it intended to create an employment relationship with the University of Sheffield.\r\n`,\r\n];\r\n\r\nexport const Home = () => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (e: any) => {\r\n    setIsChecked(e.target.checked);\r\n  };\r\n\r\n  const onSubmit = () => dispatch(acceptAgreement());\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Wrapper>\r\n        <header>\r\n          <img src={shefLogo} alt={\"logo\"} />\r\n          <div className={\"title-wrapper\"}>\r\n            <h1 className={\"title\"}>\r\n              Investigation of the adoption of DevOps practices and related\r\n              challenges in the Bulgarian Software Development Industry\r\n            </h1>\r\n          </div>\r\n        </header>\r\n\r\n        <div className={\"consent-wrapper\"}>\r\n          <Collapse defaultActiveKey={[\"1\"]} accordion={false}>\r\n            <Panel header=\"Project Information (20/07/2021)\" key=\"1\">\r\n              <p>\r\n                This research aims to investigate the adoption of DevOps\r\n                practices and related challenges in the Bulgarian Software\r\n                Industry. The motivation for the research is that despite the\r\n                growing popularity of DevOps on a global level it remains an\r\n                under-researched area with very limited quantity of academic\r\n                resources. In addition, there is no research that explores the\r\n                DevOps phenomenon in the context of the Bulgarian Software\r\n                Industry. We believe that the concentration of international\r\n                companies in Bulgaria will serve towards forming a common\r\n                knowledge and understanding of DevOps. The objective of this\r\n                research is to answer the following questions:\r\n              </p>\r\n              <ul>\r\n                <li>What is the most common definition of DevOps?</li>\r\n                <li>What is the perception of DevOps in relation to Agile?</li>\r\n                <li>\r\n                  What is the state of technical DevOps adoption and maturity?\r\n                </li>\r\n                <li>What is the state of DevOps cultural adoption?</li>\r\n                <li>\r\n                  What are the most common benefits and challenges on\r\n                  organizational and team/project levels?\r\n                </li>\r\n                <li>\r\n                  Is there a relation between company nationality, size and\r\n                  orientation and DevOps technical maturity and cultural\r\n                  adoption?\r\n                </li>\r\n              </ul>\r\n              <p>\r\n                For questions and general information, please use the contact\r\n                details listed at the top of the page.\r\n              </p>\r\n            </Panel>\r\n            <Panel header=\"Consent Agreement\" key=\"2\">\r\n              {consentParagrahs.map((para, index) => (\r\n                <p key={index}>{para}</p>\r\n              ))}\r\n            </Panel>\r\n          </Collapse>\r\n\r\n          <div className={\"agreement\"}>\r\n            <Checkbox onChange={onChange} checked={isChecked}>\r\n              I have read and understood the Consent Agreement.\r\n            </Checkbox>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            disabled={!isChecked}\r\n            onClick={onSubmit}\r\n            size={\"large\"}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst fadeIn = keyframes`\r\n    0% { opacity: 0; transform: scale(0.5) },\r\n    100% { opacity: 1; transform: scale(1) }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > div {\r\n    animation-name: ${fadeIn};\r\n    animation-duration: 0.5s;\r\n  }\r\n`;\r\n","import { Result } from \"antd\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nexport const CompletedPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Thank you!</title>\r\n      </Helmet>\r\n      <Wrapper>\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Thank you!\"\r\n          subTitle=\"The questionnaire was completed successfully!\"\r\n        />\r\n        ,\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { Survey } from \"./pages/Survey/Survey\";\nimport { Home } from \"./pages/Home/Home\";\nimport { CompletedPage } from \"./pages/Completed/CompletedPage\";\nimport { Helmet } from \"react-helmet\";\nimport { useSelector } from \"react-redux\";\nimport { TopBar } from \"./components/TopBar/TopBar\";\nimport { AppState } from \"./store/rootReducer\";\n\nexport const App = () => {\n  const consentFormAccepted = useSelector(\n    (state: AppState) => state.survey.consentFormAccepted\n  );\n\n  const surveyCompleted = useSelector((state: AppState) => state.save.success);\n\n  if (surveyCompleted) return <CompletedPage />;\n\n  return (\n    <>\n      {consentFormAccepted ? <Survey /> : <Home />}\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { store } from \"./store/configureStore\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}